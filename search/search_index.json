{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Desarrollo Web en Entorno Servidor \u00b6 Aqu\u00ed puedes encontrar los apuntes del m\u00f3dulo de Desarrollo web en entorno servidor , que se imparte en el segundo curso del ciclo formativo de grado superior de Desarrollo de Aplicaciones Web. La duracio\u0301n del m\u00f3dulo es de 160 horas lectivas, a raz\u00f3n de 8 horas semanales , y se desarrolla a lo largo de los dos primeros trimestres del curso. \u00bfQu\u00e9 voy a aprender? \u00b6 A desarrollar aplicaciones web din\u00e1micas, que obtienen la informaci\u00f3n a partir de una base de datos. Analizar la estructura de una aplicaci\u00f3n cliente/servidor, separando el c\u00f3digo de presentaci\u00f3n de la l\u00f3gica de negocio Obtener informaci\u00f3n a partir de los datos almacenados, as\u00ed como modificarlos. Modificar los datos almacenados. Resultados de aprendizaje \u00b6 Selecciona las arquitecturas y tecnolog\u00edas de programaci\u00f3n Web en entorno servidor, analizando sus capacidades y caracter\u00edsticas propias. Escribe sentencias ejecutables por un servidor Web reconociendo y aplicando procedimientos de integraci\u00f3n del co\u0301digo en lenguajes de marcas. Escribe bloques de sentencias embebidos en lenguajes de marcas, seleccionando y utilizando las estructuras de programaci\u00f3n. Desarrolla aplicaciones Web embebidas en lenguajes de marcas analizando e incorporando funcionalidades seg\u00fan especificaciones. Desarrolla aplicaciones Web identificando y aplicando mecanismos para separar el co\u0301digo de presentaci\u00f3n de la l\u00f3gica de negocio. Desarrolla aplicaciones de acceso a almacenes de datos, aplicando medidas para mantener la seguridad y la integridad de la informaci\u00f3n. Desarrolla servicios Web analizando su funcionamiento e implantando la estructura de sus componentes. Genera p\u00e1ginas Web dina\u0301micas analizando y utilizando tecnolog\u00edas del servidor Web que a\u00f1adan co\u0301digo al lenguaje de marcas. Desarrolla aplicaciones Web hi\u0301bridas seleccionando y utilizando librer\u00edas de co\u0301digo y repositorios heterog\u00e9neos de informaci\u00f3n. Unidades did\u00e1cticas \u00b6 A continuaci\u00f3n se muestran las unidades did\u00e1cticas y una estimaci\u00f3n temporal de cada una de ellas. La primera evaluaci\u00f3n contendr\u00eda las unidades comprendidas entre la 1 y la mitad de la unida 5. As\u00ed pues, desde la segunda mitad de la unidad 5 a la unidad 7 se ver\u00edan en la segunda evaluaci\u00f3n. Arquitecturas Web (4h) Cliente/Servidor MVC El lenguaje PHP (32h) Condiciones y bucles Arrays Clases y objetos Programaci\u00f3n Web (16h) Formularios Cookies y sesi\u00f3n Web Scrapping Herramientas Web (16h) Composer Pruebas con PhpUnit Documentacion con phpDocumentor Acceso a datos (26h) SQL PDO Ficheros CSV y PDF. ORM con Eloquent Frameworks PHP. Laravel (32h) Rutas Vistas Integraci\u00f3n con Eloquent i18n Servicios REST (32h) Producci\u00f3n y consumo AJAX con JSON Interacci\u00f3n con Vue.js Instrumentos de calificaci\u00f3n \u00b6 La nota de cada evaluaci\u00f3n se calcula mediante: 30% Trabajo en Clase / Actividades Se eval\u00faan todas las actividades realizadas en clase y en casa. Las actividades se eval\u00faan mediante tareas de Aules con calificaciones comprendidas entre 0 y 3 puntos: 0: No entregada 1: Entregada pero soluci\u00f3n err\u00f3nea o incompleta 2: Entregada y soluci\u00f3n aceptable, aunque tiene alg\u00fan apartado incompleto 3: Entregada y soluci\u00f3n correcta. 70% Actividad de evaluaci\u00f3n Una o dos pruebas por evaluaci\u00f3n. La nota final se calcula mediante la media de cada una de las evaluaciones.","title":"Inicio"},{"location":"index.html#desarrollo-web-en-entorno-servidor","text":"Aqu\u00ed puedes encontrar los apuntes del m\u00f3dulo de Desarrollo web en entorno servidor , que se imparte en el segundo curso del ciclo formativo de grado superior de Desarrollo de Aplicaciones Web. La duracio\u0301n del m\u00f3dulo es de 160 horas lectivas, a raz\u00f3n de 8 horas semanales , y se desarrolla a lo largo de los dos primeros trimestres del curso.","title":"Desarrollo Web en Entorno Servidor"},{"location":"index.html#que-voy-a-aprender","text":"A desarrollar aplicaciones web din\u00e1micas, que obtienen la informaci\u00f3n a partir de una base de datos. Analizar la estructura de una aplicaci\u00f3n cliente/servidor, separando el c\u00f3digo de presentaci\u00f3n de la l\u00f3gica de negocio Obtener informaci\u00f3n a partir de los datos almacenados, as\u00ed como modificarlos. Modificar los datos almacenados.","title":"\u00bfQu\u00e9 voy a aprender?"},{"location":"index.html#resultados-de-aprendizaje","text":"Selecciona las arquitecturas y tecnolog\u00edas de programaci\u00f3n Web en entorno servidor, analizando sus capacidades y caracter\u00edsticas propias. Escribe sentencias ejecutables por un servidor Web reconociendo y aplicando procedimientos de integraci\u00f3n del co\u0301digo en lenguajes de marcas. Escribe bloques de sentencias embebidos en lenguajes de marcas, seleccionando y utilizando las estructuras de programaci\u00f3n. Desarrolla aplicaciones Web embebidas en lenguajes de marcas analizando e incorporando funcionalidades seg\u00fan especificaciones. Desarrolla aplicaciones Web identificando y aplicando mecanismos para separar el co\u0301digo de presentaci\u00f3n de la l\u00f3gica de negocio. Desarrolla aplicaciones de acceso a almacenes de datos, aplicando medidas para mantener la seguridad y la integridad de la informaci\u00f3n. Desarrolla servicios Web analizando su funcionamiento e implantando la estructura de sus componentes. Genera p\u00e1ginas Web dina\u0301micas analizando y utilizando tecnolog\u00edas del servidor Web que a\u00f1adan co\u0301digo al lenguaje de marcas. Desarrolla aplicaciones Web hi\u0301bridas seleccionando y utilizando librer\u00edas de co\u0301digo y repositorios heterog\u00e9neos de informaci\u00f3n.","title":"Resultados de aprendizaje"},{"location":"index.html#unidades-didacticas","text":"A continuaci\u00f3n se muestran las unidades did\u00e1cticas y una estimaci\u00f3n temporal de cada una de ellas. La primera evaluaci\u00f3n contendr\u00eda las unidades comprendidas entre la 1 y la mitad de la unida 5. As\u00ed pues, desde la segunda mitad de la unidad 5 a la unidad 7 se ver\u00edan en la segunda evaluaci\u00f3n. Arquitecturas Web (4h) Cliente/Servidor MVC El lenguaje PHP (32h) Condiciones y bucles Arrays Clases y objetos Programaci\u00f3n Web (16h) Formularios Cookies y sesi\u00f3n Web Scrapping Herramientas Web (16h) Composer Pruebas con PhpUnit Documentacion con phpDocumentor Acceso a datos (26h) SQL PDO Ficheros CSV y PDF. ORM con Eloquent Frameworks PHP. Laravel (32h) Rutas Vistas Integraci\u00f3n con Eloquent i18n Servicios REST (32h) Producci\u00f3n y consumo AJAX con JSON Interacci\u00f3n con Vue.js","title":"Unidades did\u00e1cticas"},{"location":"index.html#instrumentos-de-calificacion","text":"La nota de cada evaluaci\u00f3n se calcula mediante: 30% Trabajo en Clase / Actividades Se eval\u00faan todas las actividades realizadas en clase y en casa. Las actividades se eval\u00faan mediante tareas de Aules con calificaciones comprendidas entre 0 y 3 puntos: 0: No entregada 1: Entregada pero soluci\u00f3n err\u00f3nea o incompleta 2: Entregada y soluci\u00f3n aceptable, aunque tiene alg\u00fan apartado incompleto 3: Entregada y soluci\u00f3n correcta. 70% Actividad de evaluaci\u00f3n Una o dos pruebas por evaluaci\u00f3n. La nota final se calcula mediante la media de cada una de las evaluaciones.","title":"Instrumentos de calificaci\u00f3n"},{"location":"01arquitecturas.html","text":"Arquitecturas Web \u00b6 Duraci\u00f3n y criterios de evaluaci\u00f3n Duraci\u00f3n estimada: 4 sesiones Resultado de aprendizaje: Selecciona las arquitecturas y tecnolog\u00edas de programaci\u00f3n Web en entorno servidor, analizando sus capacidades y caracter\u00edsticas propias. Criterios de evaluaci\u00f3n: Se han caracterizado y diferenciado los modelos de ejecuci\u00f3n de c\u00f3digo en el servidor y en el cliente Web. Se han reconocido las ventajas que proporciona la generaci\u00f3n din\u00e1mica de p\u00e1ginas Web y sus diferencias con la inclusi\u00f3n de sentencias de guiones en el interior de las p\u00e1ginas Web. Se han identificado los mecanismos de ejecuci\u00f3n de c\u00f3digo en los servidores Web. Se han reconocido las funcionalidades que aportan los servidores de aplicaciones y su integraci\u00f3n con los servidores Web. Se han identificado y caracterizado los principales lenguajes y tecnolog\u00edas relacionados con la programaci\u00f3n Web en entorno servidor. Se han verificado los mecanismos de integraci\u00f3n de los lenguajes de marcas con los lenguajes de programaci\u00f3n en entorno servidor. Se han reconocido y evaluado las herramientas de programaci\u00f3n en entorno servidor. Las arquitecturas web definen la forma en que las p\u00e1ginas de un sitio web est\u00e1n estructuradas y enlazadas entre s\u00ed. Cliente / Servidor \u00b6 N Clientes \u2190\u2192 1 Servidor / N servidores Cliente hace la petici\u00f3n ( request ) y el servidor responde ( response ). P\u00e1gina web din\u00e1mica \u00b6 Front-end \u2192 Cliente / Navegador HTML + CSS + JS Back-end \u2192 Servidor Web + BBDD El HTML se genera tras la ejecuci\u00f3n de c\u00f3digo en el servidor .php , .jsp , .asp , .cgi Full-stack \u2192 front-end + back-end Las p\u00e1ginas web din\u00e1micas utilizan recursos del servidor (base de datos, servicios web externos, etc...) Arquitectura de 3 capas \u00b6 Hay que distinguir entre capas f\u00edsicas ( tier ) y capas l\u00f3gicas ( layer ). Tier \u00b6 Ejemplo de arquitectura en tres capas f\u00edsicas ( 3 tier ): Servidor Web Servidor de Aplicaciones Servidor de base de datos No confundir las capas con la cantidad de servidores. Actualmente se trabaja con arquitecturas con m\u00faltiples servidores en una misma capa f\u00edsica mediante un cluster, para ofrecer tolerancia a errores y escalabilidad horizontal. Layer \u00b6 En cambio, las capas l\u00f3gicas ( layers ) organizan el c\u00f3digo respecto a su funcionalidad: Presentaci\u00f3n Negocio / Aplicaci\u00f3n / Proceso Datos / Persistencia Como se observa, cada una de las capas se puede implementar con diferentes lenguajes de programaci\u00f3n y/o herramientas. MVC \u00b6 Model-View-Controller / Modelo-Vista-Controlador Decisiones de dise\u00f1o \u00b6 \u00bfQu\u00e9 tama\u00f1o tiene el proyecto? \u00bfQu\u00e9 lenguajes de programaci\u00f3n conozco? \u00bfVale la pena el esfuerzo de aprender uno nuevo? \u00bfVoy a usar herramientas de c\u00f3digo abierto o herramientas propietarias? \u00bfCu\u00e1l es el coste de utilizar soluciones comerciales? \u00bfVoy a programar la aplicaci\u00f3n yo solo o formar\u00e9 parte de un grupo de programadores? \u00bfCuento con alg\u00fan servidor web o gestor de base de datos disponible o puedo decidir libremente utilizar el que crea necesario? \u00bfQu\u00e9 tipo de licencia voy a aplicar a la aplicaci\u00f3n que desarrolle? Herramientas \u00b6 Servidor Web \u00b6 Software que recibe peticiones HTTP Devuelve el recurso solicitado HTML JSON Apache: https://httpd.apache.org/ Software libre y multiplataforma Modular \u2192 PHP, Python, Perl Servidor de Aplicaciones \u00b6 Software que ofrece servicios adicionales a los de un servidor web: Clustering Balanceo de carga Tolerancia a fallos Tomcat: http://tomcat.apache.org/ Software libre y multiplataforma Contenedor Web Java: Servlets, JSP Lenguajes en el servidor \u00b6 Las aplicaciones que generan las p\u00e1ginas web se programan en: PHP JavaEE: Servlets / JSP Python ASP.NET \u2192 Visual Basic .NET / C# Ruby ... JavaEE \u00b6 PHP \u00b6 Lenguaje de prop\u00f3sito general dise\u00f1ado para el desarrollo de p\u00e1ginas web din\u00e1micas C\u00f3digo embebido en el HTML Instrucciones entre etiquetas <?php y ?> Multitud de librer\u00edas y frameworks: Symfony, Laravel, Codeigniter, Zend https://www.php.net/manual/es/index.php Puesta en marcha \u00b6 XAMPP \u00b6 Apache + MySQL + PHP + Perl Descargar A\u00f1adir permisos de ejecuci\u00f3n Instalar como root http://localhost Los archivos se colocan dentro de ....htdocs sudo /opt/lampp/manager-linux-x64.run Docker \u00b6 Docker ( https://www.docker.com ) es un gestor de contenedores, considerando un contenedor como un m\u00e9todo de virtualizaci\u00f3n del sistema operativo. El uso de contenedores requiere menos recursos que una m\u00e1quina virtual, as\u00ed pues, su lanzamiento y detenci\u00f3n son m\u00e1s r\u00e1pidos que las m\u00e1quinas virtuales. As\u00ed pues, Docker permite crear, probar e implementar aplicaciones r\u00e1pidamente, a partir de una serie de plantillas que se conocen como im\u00e1genes de Docker . Para ello es necesario tener instalado Docker Desktop ( https://www.docker.com/products/docker-desktop ) en nuestros entornos de desarrollo. En los ordenadores de clase ya est\u00e1 instalado. Para instalarlo en casa, en el caso de Windows, es necesario instalar previamente WSL 2 , el cual es un subsistema de Linux dentro de Windows . Entorno de desarrollo \u00b6 En este curso vamos a emplear VSCode.. Alternativas: Eclipse PhpStorm Hola Mundo \u00b6 <!DOCTYPE html> <html lang=\"es\"> <head> <meta charset=\"UTF-8\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <title>Hola Mundo</title> </head> <body> <?php echo \"Hola Mundo\" ; ?> </body> </html> Referencias \u00b6 Curso de introducci\u00f3n a Docker, por Sergi Garc\u00eda Barea : https://sergarb1.github.io/CursoIntroduccionADocker/ Actividades \u00b6 Busca en internet cuales son los tres frameworks PHP m\u00e1s utilizados, y indica: Nombre y URL A\u00f1o de creaci\u00f3n \u00daltima versi\u00f3n Busca tres ofertas de trabajo de desarrollo de software en Infojobs en la provincia de Alicante que citen PHP: Empresa + puesto + frameworks PHP + requ\u00edsitos + sueldo + enlace a la oferta. Una vez arrancado el servicio PHP, crea el archivo info.php y a\u00f1ade el siguiente fragmento de c\u00f3digo: <?php phpinfo () ?> Anota los valores de: Versi\u00f3n de PHP Loaded Configuration File memory_limit DOCUMENT_ROOT Repite el ejercicio anterior utilizando Docker, y comprueba de nuevo los valores. \u00bfCoinciden? \u00bfPor qu\u00e9? Abre el archivo php.ini e indica para qu\u00e9 sirven las siguientes propiedades y qu\u00e9 valores tienen: file_uploads max_execution_time short_open_tag","title":"1.- Arquitecturas Web"},{"location":"01arquitecturas.html#arquitecturas-web","text":"Duraci\u00f3n y criterios de evaluaci\u00f3n Duraci\u00f3n estimada: 4 sesiones Resultado de aprendizaje: Selecciona las arquitecturas y tecnolog\u00edas de programaci\u00f3n Web en entorno servidor, analizando sus capacidades y caracter\u00edsticas propias. Criterios de evaluaci\u00f3n: Se han caracterizado y diferenciado los modelos de ejecuci\u00f3n de c\u00f3digo en el servidor y en el cliente Web. Se han reconocido las ventajas que proporciona la generaci\u00f3n din\u00e1mica de p\u00e1ginas Web y sus diferencias con la inclusi\u00f3n de sentencias de guiones en el interior de las p\u00e1ginas Web. Se han identificado los mecanismos de ejecuci\u00f3n de c\u00f3digo en los servidores Web. Se han reconocido las funcionalidades que aportan los servidores de aplicaciones y su integraci\u00f3n con los servidores Web. Se han identificado y caracterizado los principales lenguajes y tecnolog\u00edas relacionados con la programaci\u00f3n Web en entorno servidor. Se han verificado los mecanismos de integraci\u00f3n de los lenguajes de marcas con los lenguajes de programaci\u00f3n en entorno servidor. Se han reconocido y evaluado las herramientas de programaci\u00f3n en entorno servidor. Las arquitecturas web definen la forma en que las p\u00e1ginas de un sitio web est\u00e1n estructuradas y enlazadas entre s\u00ed.","title":"Arquitecturas Web"},{"location":"01arquitecturas.html#cliente-servidor","text":"N Clientes \u2190\u2192 1 Servidor / N servidores Cliente hace la petici\u00f3n ( request ) y el servidor responde ( response ).","title":"Cliente / Servidor"},{"location":"01arquitecturas.html#pagina-web-dinamica","text":"Front-end \u2192 Cliente / Navegador HTML + CSS + JS Back-end \u2192 Servidor Web + BBDD El HTML se genera tras la ejecuci\u00f3n de c\u00f3digo en el servidor .php , .jsp , .asp , .cgi Full-stack \u2192 front-end + back-end Las p\u00e1ginas web din\u00e1micas utilizan recursos del servidor (base de datos, servicios web externos, etc...)","title":"P\u00e1gina web din\u00e1mica"},{"location":"01arquitecturas.html#arquitectura-de-3-capas","text":"Hay que distinguir entre capas f\u00edsicas ( tier ) y capas l\u00f3gicas ( layer ).","title":"Arquitectura de 3 capas"},{"location":"01arquitecturas.html#tier","text":"Ejemplo de arquitectura en tres capas f\u00edsicas ( 3 tier ): Servidor Web Servidor de Aplicaciones Servidor de base de datos No confundir las capas con la cantidad de servidores. Actualmente se trabaja con arquitecturas con m\u00faltiples servidores en una misma capa f\u00edsica mediante un cluster, para ofrecer tolerancia a errores y escalabilidad horizontal.","title":"Tier"},{"location":"01arquitecturas.html#layer","text":"En cambio, las capas l\u00f3gicas ( layers ) organizan el c\u00f3digo respecto a su funcionalidad: Presentaci\u00f3n Negocio / Aplicaci\u00f3n / Proceso Datos / Persistencia Como se observa, cada una de las capas se puede implementar con diferentes lenguajes de programaci\u00f3n y/o herramientas.","title":"Layer"},{"location":"01arquitecturas.html#mvc","text":"Model-View-Controller / Modelo-Vista-Controlador","title":"MVC"},{"location":"01arquitecturas.html#decisiones-de-diseno","text":"\u00bfQu\u00e9 tama\u00f1o tiene el proyecto? \u00bfQu\u00e9 lenguajes de programaci\u00f3n conozco? \u00bfVale la pena el esfuerzo de aprender uno nuevo? \u00bfVoy a usar herramientas de c\u00f3digo abierto o herramientas propietarias? \u00bfCu\u00e1l es el coste de utilizar soluciones comerciales? \u00bfVoy a programar la aplicaci\u00f3n yo solo o formar\u00e9 parte de un grupo de programadores? \u00bfCuento con alg\u00fan servidor web o gestor de base de datos disponible o puedo decidir libremente utilizar el que crea necesario? \u00bfQu\u00e9 tipo de licencia voy a aplicar a la aplicaci\u00f3n que desarrolle?","title":"Decisiones de dise\u00f1o"},{"location":"01arquitecturas.html#herramientas","text":"","title":"Herramientas"},{"location":"01arquitecturas.html#servidor-web","text":"Software que recibe peticiones HTTP Devuelve el recurso solicitado HTML JSON Apache: https://httpd.apache.org/ Software libre y multiplataforma Modular \u2192 PHP, Python, Perl","title":"Servidor Web"},{"location":"01arquitecturas.html#servidor-de-aplicaciones","text":"Software que ofrece servicios adicionales a los de un servidor web: Clustering Balanceo de carga Tolerancia a fallos Tomcat: http://tomcat.apache.org/ Software libre y multiplataforma Contenedor Web Java: Servlets, JSP","title":"Servidor de Aplicaciones"},{"location":"01arquitecturas.html#lenguajes-en-el-servidor","text":"Las aplicaciones que generan las p\u00e1ginas web se programan en: PHP JavaEE: Servlets / JSP Python ASP.NET \u2192 Visual Basic .NET / C# Ruby ...","title":"Lenguajes en el servidor"},{"location":"01arquitecturas.html#puesta-en-marcha","text":"","title":"Puesta en marcha"},{"location":"01arquitecturas.html#xampp","text":"Apache + MySQL + PHP + Perl Descargar A\u00f1adir permisos de ejecuci\u00f3n Instalar como root http://localhost Los archivos se colocan dentro de ....htdocs sudo /opt/lampp/manager-linux-x64.run","title":"XAMPP"},{"location":"01arquitecturas.html#docker","text":"Docker ( https://www.docker.com ) es un gestor de contenedores, considerando un contenedor como un m\u00e9todo de virtualizaci\u00f3n del sistema operativo. El uso de contenedores requiere menos recursos que una m\u00e1quina virtual, as\u00ed pues, su lanzamiento y detenci\u00f3n son m\u00e1s r\u00e1pidos que las m\u00e1quinas virtuales. As\u00ed pues, Docker permite crear, probar e implementar aplicaciones r\u00e1pidamente, a partir de una serie de plantillas que se conocen como im\u00e1genes de Docker . Para ello es necesario tener instalado Docker Desktop ( https://www.docker.com/products/docker-desktop ) en nuestros entornos de desarrollo. En los ordenadores de clase ya est\u00e1 instalado. Para instalarlo en casa, en el caso de Windows, es necesario instalar previamente WSL 2 , el cual es un subsistema de Linux dentro de Windows .","title":"Docker"},{"location":"01arquitecturas.html#entorno-de-desarrollo","text":"En este curso vamos a emplear VSCode.. Alternativas: Eclipse PhpStorm","title":"Entorno de desarrollo"},{"location":"01arquitecturas.html#hola-mundo","text":"<!DOCTYPE html> <html lang=\"es\"> <head> <meta charset=\"UTF-8\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <title>Hola Mundo</title> </head> <body> <?php echo \"Hola Mundo\" ; ?> </body> </html>","title":"Hola Mundo"},{"location":"01arquitecturas.html#referencias","text":"Curso de introducci\u00f3n a Docker, por Sergi Garc\u00eda Barea : https://sergarb1.github.io/CursoIntroduccionADocker/","title":"Referencias"},{"location":"01arquitecturas.html#actividades","text":"Busca en internet cuales son los tres frameworks PHP m\u00e1s utilizados, y indica: Nombre y URL A\u00f1o de creaci\u00f3n \u00daltima versi\u00f3n Busca tres ofertas de trabajo de desarrollo de software en Infojobs en la provincia de Alicante que citen PHP: Empresa + puesto + frameworks PHP + requ\u00edsitos + sueldo + enlace a la oferta. Una vez arrancado el servicio PHP, crea el archivo info.php y a\u00f1ade el siguiente fragmento de c\u00f3digo: <?php phpinfo () ?> Anota los valores de: Versi\u00f3n de PHP Loaded Configuration File memory_limit DOCUMENT_ROOT Repite el ejercicio anterior utilizando Docker, y comprueba de nuevo los valores. \u00bfCoinciden? \u00bfPor qu\u00e9? Abre el archivo php.ini e indica para qu\u00e9 sirven las siguientes propiedades y qu\u00e9 valores tienen: file_uploads max_execution_time short_open_tag","title":"Actividades"},{"location":"05accesoDatos.html","text":"Acceso a datos (26h) \u00b6 Duraci\u00f3n estimada: 26 sesiones Esta unidad trabaja el acceso a los datos desde PHP. SQL \u00b6 Partir de un par de ejemplos ... la Tienda puede ser uno Otro un Yahoo Respuestas (https://github.com/PacktPublishing/Laravel-Foundations-Basics-to-Every-App) ... Tabla pregunta: con id, titulo, descripcion, created_at, updated_at mysqli \u00b6 PDO \u00b6 Acceso a ficheros \u00b6 Archivos CSV \u00b6 Archivos PDF \u00b6 Eloquent \u00b6 Mapeo ORM \u00b6","title":"5.- Acceso a Datos"},{"location":"05accesoDatos.html#acceso-a-datos-26h","text":"Duraci\u00f3n estimada: 26 sesiones Esta unidad trabaja el acceso a los datos desde PHP.","title":"Acceso a datos (26h)"},{"location":"05accesoDatos.html#sql","text":"Partir de un par de ejemplos ... la Tienda puede ser uno Otro un Yahoo Respuestas (https://github.com/PacktPublishing/Laravel-Foundations-Basics-to-Every-App) ... Tabla pregunta: con id, titulo, descripcion, created_at, updated_at","title":"SQL"},{"location":"05accesoDatos.html#mysqli","text":"","title":"mysqli"},{"location":"05accesoDatos.html#pdo","text":"","title":"PDO"},{"location":"05accesoDatos.html#acceso-a-ficheros","text":"","title":"Acceso a ficheros"},{"location":"05accesoDatos.html#archivos-csv","text":"","title":"Archivos CSV"},{"location":"05accesoDatos.html#archivos-pdf","text":"","title":"Archivos PDF"},{"location":"05accesoDatos.html#eloquent","text":"","title":"Eloquent"},{"location":"05accesoDatos.html#mapeo-orm","text":"","title":"Mapeo ORM"},{"location":"06frameworks.html","text":"Frameworks PHP. Laravel \u00b6 Duraci\u00f3n estimada: 32 sesiones Frameworks \u00b6 Puesta en marcha \u00b6 Los requisitos para poner en marcha Laravel son tener instalados los comandos php y composer . Para crear el proyecto: composer create-project laravel/laravel --prefer-dist NombreProyecto Una vez creado el proyecto Laravel, es conveniente situarse en el ra\u00edz del mismo y ejecutar composer update php artisan key:generate Configuraci\u00f3n \u00b6 En el directorio raiz del proyecto tenemos el archivo .env . Este archivo define las variables de entorno que personalizan nuestro entorno. As\u00ed pues, es aqu\u00ed donde deberemos configurar nuestra base de datos. DB_HOST=localhost DB_DATABASE=dwes DB_USERNAME=severo DB_PASSWORD=ochoa Migraciones \u00b6 https://richos.gitbooks.io/laravel-5/content/capitulos/chapter6.html A la hora de definir nuestra base de datos, el primer paso suele ser su dise\u00f1o tanto conceptual, como l\u00f3gico y f\u00edsico, haciendo uso de alg\u00fana herramienta gr\u00e1fica tipo MySQL Workbench para la posterior generaci\u00f3n del c\u00f3digo SQL con la estructura de las tablas y sus relaciones. Las migraciones ( https://laravel.com/docs/master/migrations ) permiten a Laravel definir la estructura de la base de datos de manera program\u00e1tica, esto es, mediante PHP en vez de SQL. Adem\u00e1s de desacoplar el sistema gestor de base de datos de nuestra aplicaci\u00f3n mediante el uso de la fachada Schema , las migraciones evitan errores de sintaxis y mantienen los entornos de producci\u00f3n, preproducci\u00f3n, pruebas y entorno local con la misma informaci\u00f3n. Creaci\u00f3n \u00b6 Para crear una migraci\u00f3n podemos crear directamente nuestras clases en la ruta database/migrations/ de nuestro proyecto Laravel, o utilizar los comandos de artisan . Para crear nuestras migraciones en Laravel se usa el siguiente comando: php artisan make:migration nombreMigracion que nos crea la clase vac\u00eda para escribir nuestra migraci\u00f3n, o bien el comando: php artisan make:migration nombreMigracion --create=nombreTabla que nos agrega una plantilla de trabajo b\u00e1sica para empezar a trabajar. Para ello, hemos de crear una clase que herede de Illuminate\\Database\\Migrations\\Migration por cada tabla de nuestra aplicaci\u00f3n. El m\u00e9todo que se encarga de generar la migraci\u00f3n es up() , y dentro de \u00e9l, mediante la clase Schema indicaremos la estructura de la tabla junto con sus atributos y dominios. Para deshacer las migraciones rescribiremos el m\u00e9todo down() . Por ejemplo, vamos a crear la tabla preguntas de nuestra aplicaci\u00f3n. Para ello, primero crearemos la migraci\u00f3n mediante la consola: php artisan make:migration createPreguntasTable Y posteriormente rellenaremos los m\u00e9todos con su definici\u00f3n: <?php use Illuminate\\Database\\Migrations\\Migration ; use Illuminate\\Database\\Schema\\Blueprint ; use Illuminate\\Support\\Facades\\Schema ; class CreatePreguntasTable extends Migration { /** * Ejecuta las migraciones. * * @return void */ public function up () { Schema :: create ( 'preguntas' , function ( Blueprint $table ) { $table -> increments ( 'id' ); $table -> string ( 'titulo' ); $table -> text ( 'descripcion' ) -> nullable (); $table -> timestamps (); }); } /** * Deshace las migraciones. * * @return void */ public function down () { Schema :: dropIfExists ( 'preguntas' ); } } Rutas \u00b6 Vistas \u00b6 Integraci\u00f3n con Eloquent \u00b6 Autenticaci\u00f3n y autorizaci\u00f3n \u00b6 Curso O'Reilly i18n \u00b6 Referencias \u00b6 Curso de Laravel de pildorasinform\u00e1ticas Actividades \u00b6","title":"6.- Frameworks PHP - Laravel"},{"location":"06frameworks.html#frameworks-php-laravel","text":"Duraci\u00f3n estimada: 32 sesiones","title":"Frameworks PHP. Laravel"},{"location":"06frameworks.html#frameworks","text":"","title":"Frameworks"},{"location":"06frameworks.html#puesta-en-marcha","text":"Los requisitos para poner en marcha Laravel son tener instalados los comandos php y composer . Para crear el proyecto: composer create-project laravel/laravel --prefer-dist NombreProyecto Una vez creado el proyecto Laravel, es conveniente situarse en el ra\u00edz del mismo y ejecutar composer update php artisan key:generate","title":"Puesta en marcha"},{"location":"06frameworks.html#configuracion","text":"En el directorio raiz del proyecto tenemos el archivo .env . Este archivo define las variables de entorno que personalizan nuestro entorno. As\u00ed pues, es aqu\u00ed donde deberemos configurar nuestra base de datos. DB_HOST=localhost DB_DATABASE=dwes DB_USERNAME=severo DB_PASSWORD=ochoa","title":"Configuraci\u00f3n"},{"location":"06frameworks.html#migraciones","text":"https://richos.gitbooks.io/laravel-5/content/capitulos/chapter6.html A la hora de definir nuestra base de datos, el primer paso suele ser su dise\u00f1o tanto conceptual, como l\u00f3gico y f\u00edsico, haciendo uso de alg\u00fana herramienta gr\u00e1fica tipo MySQL Workbench para la posterior generaci\u00f3n del c\u00f3digo SQL con la estructura de las tablas y sus relaciones. Las migraciones ( https://laravel.com/docs/master/migrations ) permiten a Laravel definir la estructura de la base de datos de manera program\u00e1tica, esto es, mediante PHP en vez de SQL. Adem\u00e1s de desacoplar el sistema gestor de base de datos de nuestra aplicaci\u00f3n mediante el uso de la fachada Schema , las migraciones evitan errores de sintaxis y mantienen los entornos de producci\u00f3n, preproducci\u00f3n, pruebas y entorno local con la misma informaci\u00f3n.","title":"Migraciones"},{"location":"06frameworks.html#rutas","text":"","title":"Rutas"},{"location":"06frameworks.html#vistas","text":"","title":"Vistas"},{"location":"06frameworks.html#integracion-con-eloquent","text":"","title":"Integraci\u00f3n con Eloquent"},{"location":"06frameworks.html#autenticacion-y-autorizacion","text":"Curso O'Reilly","title":"Autenticaci\u00f3n y autorizaci\u00f3n"},{"location":"06frameworks.html#i18n","text":"","title":"i18n"},{"location":"06frameworks.html#referencias","text":"Curso de Laravel de pildorasinform\u00e1ticas","title":"Referencias"},{"location":"06frameworks.html#actividades","text":"","title":"Actividades"},{"location":"07rest.html","text":"Servicios REST \u00b6 Duraci\u00f3n estimada: 32 sesiones Producci\u00f3n y consumo \u00b6 AJAX con JSON \u00b6 Interacci\u00f3n con Vue.js \u00b6 https://manuais.iessanclemente.net/index.php/LARAVEL_Framework_-_Tutorial_01_-_Creaci\u00f3n_de_API_RESTful_(actualizado) https://github.com/jmnavarro/http-api-design https://www.vinaysahni.com/best-practices-for-a-pragmatic-restful-api https://leanpub.com/build-apis-you-wont-hate","title":"Servicios REST"},{"location":"07rest.html#servicios-rest","text":"Duraci\u00f3n estimada: 32 sesiones","title":"Servicios REST"},{"location":"07rest.html#produccion-y-consumo","text":"","title":"Producci\u00f3n y consumo"},{"location":"07rest.html#ajax-con-json","text":"","title":"AJAX con JSON"},{"location":"07rest.html#interaccion-con-vuejs","text":"https://manuais.iessanclemente.net/index.php/LARAVEL_Framework_-_Tutorial_01_-_Creaci\u00f3n_de_API_RESTful_(actualizado) https://github.com/jmnavarro/http-api-design https://www.vinaysahni.com/best-practices-for-a-pragmatic-restful-api https://leanpub.com/build-apis-you-wont-hate","title":"Interacci\u00f3n con Vue.js"}]}